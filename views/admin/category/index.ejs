<div class="content">
    <div class="limit_member_page">
        <div class="member_page">
            <%- include('./navbar.ejs')%>
                <form action="/admin/category/create" method="POST" class="container_category">
                    <input type="hidden" name="id_admin" value="<%= SESSION_USER.id %>">
                    <input type="text" name="category_name" placeholder="สร้างหมวดหมู่">
                    <button><i class="fa-solid fa-download category_send"></i></button>
                </form>
                <table>
                    <thead>
                        <tr>
                            <th>ลำดับที่</th>
                            <th>ชื่อหมวดหมู่</th>
                            <th>ผู้สร้าง</th>
                            <th>วันที่สร้าง</th>
                        </tr>
                    </thead>
                    <tbody id="member_list_data">
                    </tbody>
                </table>

                <form action="/admin/category/edit" method="POST" class="container_category_edit">
                    <input type="text" name="category_name_edit">
                    <input type="hidden" name="id_category">
                    <button><i class="fa-solid fa-download category_send"></i></button>
                    <a id="cancel_category" onclick="clearForm(event)"><i class="fa-solid fa-x category_send"></i></a>
                </form>

                <div class="container_serach_category">
                    <input type="text" id="searchInput" onkeyup="searchCategories()" placeholder="ค้นหาหมวดหมู่">
                </div>

                <div id="pagination">
                    <button onclick="previousPage()">
                        <</button>
                            <span id="paginationNumbers"></span>
                            <button onclick="nextPage()">></button>
                </div>

        </div>
    </div>
</div>

<script>
    let category;
    const itemsPerPage = 5;
    let currentPage = 1;

    function searchCategories() {
        const input = document.getElementById("searchInput");
        const query = input.value.toLowerCase();

        const filteredCategories = category.filter(cat => {
            return cat.category_name.toLowerCase().includes(query) ||
                cat.name.toLowerCase().includes(query) ||
                formatDate(cat.create_category_date).includes(query);
        });

        currentPage = 1;
        renderTable(currentPage, filteredCategories);
        renderPagination(filteredCategories);
    }

    function formatDate(dateString) {
        const options = {
            year: 'numeric',
            month: '2-digit',
            day: '2-digit'
        };
        return new Date(dateString).toLocaleDateString('en-GB', options);
    }

    function renderTable(pageNumber, data) {
        let start = (pageNumber - 1) * itemsPerPage;
        let end = start + itemsPerPage;
        let html = '';

        for (var count = start; count < end && count < data.length; count++) {
            html += '<tr>';
            html += '<td>' + (count + 1) + '</td>';
            html += '<td>' + data[count].category_name + '</td>';
            html += '<td>' + data[count].name + '</td>';
            html += '<td>' + formatDate(data[count].create_category_date) + '</td>';
            html += '<td>';
            html += '<div class="container_toottip_member">';
            html += '<i id="tooltip_click" class="material-icons tooltip_click">more_horiz</i>';
            html += '<div class="toottip_member">';
            html += '<a onclick="editCategory(' + data[count].id_category + ')"><i class="fa-solid fa-pen-to-square member_icon"></i>แก้ไข</a>';
            html += '<a href="/admin/category/delete?id_category=' + data[count].id_category + '"><i class="fa-solid fa-magnifying-glass member_icon"></i>ลบ</a>';
            html += '</div>';
            html += '</div>';
            html += '</td>';
            html += '</tr>';
        }

        const member_list_data = $("#member_list_data");
        member_list_data.empty();
        member_list_data.append(html);
    }

    function renderPagination(data) {
        const totalPages = Math.ceil(data.length / itemsPerPage);
        const paginationNumbers = $("#paginationNumbers");
        let html = '';

        for (let i = 1; i <= totalPages; i++) {
            html += '<button onclick="goToPage(' + i + ')">' + i + '</button>';
        }

        paginationNumbers.empty();
        paginationNumbers.append(html);
    }

    function previousPage() {
        if (currentPage > 1) {
            currentPage--;
            renderTable(currentPage, category);

            // Remove 'active' class from all pagination buttons
            $('#paginationNumbers button').removeClass('active');

            // Add 'active' class to the current pagination button
            $('#paginationNumbers button').eq(currentPage - 1).addClass('active');
        }
    }

    function nextPage() {
        const totalPages = Math.ceil(category.length / itemsPerPage);
        if (currentPage < totalPages) {
            currentPage++;
            renderTable(currentPage, category);

            // Remove 'active' class from all pagination buttons
            $('#paginationNumbers button').removeClass('active');

            // Add 'active' class to the current pagination button
            $('#paginationNumbers button').eq(currentPage - 1).addClass('active');
        }
    }

    function goToPage(page) {

        currentPage = page;
        renderTable(currentPage, category);

        // Remove the 'active' class from all pagination buttons
        $('#paginationNumbers button').removeClass('active');

        currentPage = page;
        renderTable(currentPage, category);

        // Add the 'active' class to the current pagination button
        $('#paginationNumbers button').eq(currentPage - 1).addClass('active');
    }

    function addTooltipEventListeners() {
        const tooltips = document.querySelectorAll('.tooltip_click');

        tooltips.forEach(tooltip => {
            tooltip.addEventListener('click', (event) => {
                event.stopPropagation();

                const tooltipContainer = tooltip.closest('.container_toottip_member');
                const tooltipContent = tooltipContainer.querySelector('.toottip_member');

                // Hide all other tooltips
                const allTooltips = document.querySelectorAll('.toottip_member');
                allTooltips.forEach(otherTooltip => {
                    if (otherTooltip !== tooltipContent) {
                        otherTooltip.classList.remove('active');
                    }
                });

                tooltipContent.classList.toggle('active');
            });
        });

        document.addEventListener('click', (event) => {
            const tooltips = document.querySelectorAll('.toottip_member');
            tooltips.forEach(tooltip => {
                tooltip.classList.remove('active');
            });
        });
    }

    function editCategory(categoryId) {
        const editForm = document.querySelector('.container_category_edit');

        // Find the category by ID
        const selectedCategory = category.find(cat => cat.id_category === categoryId);

        // Populate the input fields
        const inputCategoryName = editForm.querySelector('input[name="category_name_edit"]');
        const inputCategoryId = editForm.querySelector('input[name="id_category"]');

        if (selectedCategory) {
            inputCategoryName.value = selectedCategory.category_name;
            inputCategoryId.value = selectedCategory.id_category;

            editForm.style.display = 'block';
        }
    }

    function clearForm(event) {
        event.preventDefault();

        const editForm = document.querySelector('.container_category_edit');
        const inputCategoryName = editForm.querySelector('input[name="category_name_edit"]');
        const inputCategoryId = editForm.querySelector('input[name="id_category"]');

        inputCategoryName.value = '';
        inputCategoryId.value = '';

        editForm.style.display = 'none';
    }

    function getCategoryNameById(categoryId) {
        const selectedCategory = category.find(cat => cat.id === categoryId);
        return selectedCategory ? selectedCategory.category_name : '';
    }

    window.onload = async function () {
        const response = await fetch('/category/admin');
        category = await response.json();

        renderTable(1, category);
        renderPagination(category);

        $('#paginationNumbers button:first').addClass('active');

        addTooltipEventListeners();
    }


</script>