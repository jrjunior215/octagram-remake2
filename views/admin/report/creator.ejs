<div class="content">
    <div class="limit_member_page">
        <div class="member_page">
            <%- include('./navbar.ejs')%>

                <div class="header_membership_content">
                    <div class="header_member">
                        <div class="headeer_membership_show">
                            <h1>รายได้คริเอเตอร์</h1>
                        </div>
                        <div class="header_membership_month">
                            <label for="monthSelect">เลือกเดือน:</label>
                            <select id="monthSelect"></select>
                        </div>
                    </div>
                    <hr>
                </div>

                <table>
                    <thead>
                        <tr>
                            <th>ลำดับที่</th>
                            <th>คริเอเตอร์</th>
                            <th>รายได้ทั้งหมด</th>
                            <th>ค่าบริการ</th>
                            <th>รายที่ได้รับ</th>
                            <th>วันที่</th>
                        </tr>
                    </thead>
                    <tbody id="member_list_data">
                    </tbody>
                </table>

                <div class="container_serach_category">
                    <input type="text" id="searchInput" onkeyup="searchCategories()" placeholder="ค้นหาคริเอเตอร์">
                </div>

                <div id="pagination">
                    <button onclick="previousPage()">
                        <</button>
                            <span id="paginationNumbers"></span>
                            <button onclick="nextPage()">></button>
                </div>

        </div>
    </div>
</div>

<script>
    let category;
    let filteredCategories;
    let currentMonthCategory;
    const itemsPerPage = 5;
    let currentPage = 1;

    function onMonthSelectChange() {
        const selectedMonth = parseInt(document.getElementById("monthSelect").value);

        currentMonthCategory = category.filter(item => {
            const itemDate = new Date(item.date_income);
            const itemMonth = itemDate.getMonth() + 1;
            return itemMonth === selectedMonth;
        });

        currentPage = 1;
        renderTable(currentPage, currentMonthCategory);
        renderPagination(currentMonthCategory);

        $('#paginationNumbers button:first').addClass('active');
    }

    function populateMonths() {
        const monthSelect = document.getElementById("monthSelect");
        const currentMonth = new Date().getMonth(); // Get current month (0-11)

        const thaiMonths = [
            "มกราคม", "กุมภาพันธ์", "มีนาคม", "เมษายน", "พฤษภาคม", "มิถุนายน",
            "กรกฎาคม", "สิงหาคม", "กันยายน", "ตุลาคม", "พฤศจิกายน", "ธันวาคม"
        ];

        for (let i = 0; i < 12; i++) {
            const option = document.createElement("option");
            option.value = i + 1; // Months are 1-indexed
            option.text = thaiMonths[i];
            monthSelect.appendChild(option);
        }

        // Set current month as selected
        monthSelect.selectedIndex = currentMonth;
        monthSelect.addEventListener("change", onMonthSelectChange);
    }

    window.onload = async function () {
        const response = await fetch('/admin/income/creator');
        category = await response.json();
        console.log(category);

        const currentDate = new Date();
        const currentMonth = currentDate.getMonth() + 1; // 

        currentMonthCategory = category.filter(item => {
            const itemDate = new Date(item.date_income);
            const itemMonth = itemDate.getMonth() + 1;
            return itemMonth === currentMonth;
        });

        renderTable(1, currentMonthCategory);
        renderPagination(currentMonthCategory);
        populateMonths();

        $('#paginationNumbers button:first').addClass('active');
    }

    function searchCategories() {

        const input = document.getElementById("searchInput");
        const query = input.value.toLowerCase();

        filteredCategories = currentMonthCategory.filter(cat => {
            return cat.creator_name.toLowerCase().includes(query);
        });

        console.log(filteredCategories)

        currentPage = 1;
        renderTable(currentPage, filteredCategories);
        renderPagination(filteredCategories);

        $('#paginationNumbers button:first').addClass('active');
    }

    function formatDate(dateString) {
        const options = {
            year: 'numeric',
            month: '2-digit',
            day: '2-digit'
        };
        return new Date(dateString).toLocaleDateString('en-GB', options);
    }

    function renderTable(pageNumber, data) {
        let start = (pageNumber - 1) * itemsPerPage;
        let end = start + itemsPerPage;
        let html = '';

        for (var count = start; count < end && count < data.length; count++) {
            html += '<tr>';
            html += '<td>' + (count + 1) + '</td>';
            html += '<td><div class="membership_content"><img src="' + data[count].img + '" alt="creator"><span>' + data[count].creator_name + '</span></div></td>';
            html += '<td>' + data[count].income + '</td>';
            html += '<td>' + data[count].fee + '</td>';
            html += '<td>' + data[count].total_income + '</td>';
            html += '<td>' + formatDate(data[count].date_income) + '</td>';
            html += '</tr>';
        }

        const member_list_data = $("#member_list_data");
        member_list_data.empty();
        member_list_data.append(html);

    }

    function renderPagination(data) {
        const totalPages = Math.ceil(data.length / itemsPerPage);
        const paginationNumbers = $("#paginationNumbers");
        let html = '';

        for (let i = 1; i <= totalPages; i++) {
            html += '<button onclick="goToPage(' + i + ')">' + i + '</button>';
        }

        paginationNumbers.empty();
        paginationNumbers.append(html);
    }

    function previousPage() {
        const data = filteredCategories || currentMonthCategory;

        if (currentPage > 1) {
            currentPage--;
            renderTable(currentPage, data);

            $('#paginationNumbers button').removeClass('active');

            $('#paginationNumbers button').eq(currentPage - 1).addClass('active');
        }
    }

    function nextPage() {
        const data = filteredCategories || currentMonthCategory;

        const totalPages = Math.ceil(data.length / itemsPerPage);
        if (currentPage < totalPages) {
            currentPage++;
            renderTable(currentPage, data);

            $('#paginationNumbers button').removeClass('active');

            $('#paginationNumbers button').eq(currentPage - 1).addClass('active');
        }
    }

    function goToPage(page) {

        const data = filteredCategories || currentMonthCategory;

        currentPage = page;
        renderTable(currentPage, data);

        $('#paginationNumbers button').removeClass('active');

        currentPage = page;
        renderTable(currentPage, data);

        $('#paginationNumbers button').eq(currentPage - 1).addClass('active');
    }

</script>