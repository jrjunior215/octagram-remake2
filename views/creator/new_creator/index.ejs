<div class="cotent_new_creator">
  <div class="limit_new_creator_page">
    <div class="new_creator_page">
      <div class="new_creator_title">
        <h1>ตั้งชื่อเพจของคุณ</h1>
      </div>
      <form action="/creator/create" method="POST" enctype="multipart/form-data">
        <div class="new_creator_box">
          <div class="new_creator_profile">
            <div class="new_creator_grid">
              <span>ชื่อเพจ</span>
              <input type="text" name="creator_name" placeholder="Octagram">
            </div>
            <div class="new_creator_grid">
              <span>คำอธิบายเกี่ยวกับเพจของคุณ</span>
              <input type="text" name="creator_desc" placeholder="Make people love">
            </div>
          </div>
        </div>
        <div class="new_creator_desc">
          <span>* ชื่อเพจของคุณจะทำให้ผู้คนรู้จักคุณและค้นหาคุณได้อย่างไร คุณสามารถเปลี่ยนได้ในภายหลัง</span>
        </div>
        <div class="new_creator_title">
          <h1>โปรไฟล์เพจของคุณ</h1>
        </div>
        <div class="new_creator_box">
          <div class="new_creator_profile_img">
            <label for="profile-image-upload">
              <img alt="creator_img" src="/img/creator_img.png" id="profile-image1">
            </label>
            <input name="image" id="profile-image-upload" class="hidden" type="file" onchange="previewFile()"
              value="/img/creator_img.png">
            <span id="cancel-button" class="hidden" onclick="cancelUpload()">Cancel</span>
          </div>
        </div>
        <div class="new_creator_title">
          <h1>ประวัติส่วนตัว</h1>
        </div>
        <div class="new_creator_box">
          <div class="new_creator_profile">
            <div class="new_creator_grid">
              <span>ชื่อจริง</span>
              <input type="text" name="fname">
            </div>
            <div class="new_creator_grid">
              <span>นามสกุล</span>
              <input type="text" name="lname">
            </div>
            <div class="new_creator_grid">
              <span>เบอร์โทรศัพท์</span>
              <input type="text" name="phone">
            </div>
            <div class="new_creator_grid">
              <span>วันเดือนปีเกิด</span>
              <input type="date" id="dateInput" name="birthdate" placeholder="DD/MM/YYYY">
            </div>
            <div class="new_creator_grid">
              <span>ที่อยู่ปัจจุบัน</span>
              <textarea type="text" name="location"></textarea>
            </div>
          </div>
        </div>
        <div class="new_creator_desc">
          <span>* ข้อมูลส่วนตัวของคุณจะไม่ถูกนำไปเผยแพร่</span>
        </div>
        <div class="new_creator_title">
          <h1>แนะนำเพจของคุณ</h1>
        </div>
        <div class="new_creator_box">
          <div class="new_creator_grid">
            <span>คำอธิบาย (สำหรับนำไปพิจารณาเกี่ยวกับเพจของคุณ)</span>
            <textarea type="text" name="explain"></textarea>
          </div>
          <div class="new_creator_grid">
            <span>หมวดหมู่</span>
            <textarea type="text" name="category" id="categoryTextArea"></textarea>
            <div id="selectedCategories"></div>
            <div class="category_search" id="category_search"></div>
          </div>
        </div>
        <div class="new_creator_desc">
          <span>* ข้อมูลจะถูกนำไปพิจารณา เพื่อให้ได้รับการยืนยัน</span>
        </div>
        <div class="new_creator_save">
          <input type="hidden" name="id_user" value="<%=SESSION_USER.id%>">
          <button class="btn_save">Save</button>
          <a class="btn_goback" id="backButton">Back</a>
        </div>
      </form>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const form = document.querySelector('form');

    form.addEventListener('submit', function (event) {
      const creatorName = document.querySelector('input[name="creator_name"]').value;
      const creatorDesc = document.querySelector('input[name="creator_desc"]').value;
      const fname = document.querySelector('input[name="fname"]').value;
      const lname = document.querySelector('input[name="lname"]').value;
      const phone = document.querySelector('input[name="phone"]').value;
      const birthdate = document.querySelector('input[name="birthdate"]').value;
      const location = document.querySelector('textarea[name="location"]').value;
      const explain = document.querySelector('textarea[name="explain"]').value;

      if (!creatorName || !creatorDesc || !fname || !lname || !phone || !birthdate || !location || !explain) {
        alert("โปรดกรอกข้อมูลให้ครบทุกช่อง");
        event.preventDefault(); // ป้องกันการ submit ฟอร์ม
      }
    });
  });

  document.addEventListener('DOMContentLoaded', function () {
    const form = document.querySelector('form');

    form.addEventListener('submit', function (event) {
      const inputs = form.querySelectorAll('input');
      inputs.forEach(function (input) {
        if (!input.value) {
          input.style.borderColor = 'red';
        } else {
          input.style.borderColor = 'black'; // เมื่อมีข้อมูลใน input
        }
      });

      const textareas = form.querySelectorAll('textarea:not([name="category"])');
      textareas.forEach(function (textarea) {
        if (!textarea.value) {
          textarea.style.borderColor = 'red';
        } else {
          textarea.style.borderColor = 'black'; // เมื่อมีข้อมูลใน textarea
        }
      });

      const emptyInputs = form.querySelectorAll('input:invalid');
      const emptyTextareas = form.querySelectorAll('textarea:invalid');

      if (emptyInputs.length > 0 || emptyTextareas.length > 0) {
        event.preventDefault(); // ป้องกันการ submit ฟอร์ม

        window.scrollTo({ top: 0, behavior: 'smooth' });
      }
    });
  });

  document.getElementById('backButton').addEventListener('click', function () {
    window.history.back();
  });

  function previewFile() {
    const fileInput = document.getElementById('profile-image-upload');
    const image = document.getElementById('profile-image1');
    const cancelButton = document.getElementById('cancel-button');

    const file = fileInput.files[0];
    const allowedExtensions = /(\.png|\.jpeg|\.jpg)$/i; // Regular expression for allowed extensions

    if (file && allowedExtensions.exec(file.name)) {
      const reader = new FileReader();
      reader.onload = function (e) {
        image.src = e.target.result;
        cancelButton.style.display = 'block';
      };
      reader.readAsDataURL(file);
    } else {
      alert("Please select a valid PNG, JPEG, or JPG file.");
      fileInput.value = ''; // Reset the input value
      image.src = '/img/creator_img.png'; // Set the image source back to default
      cancelButton.style.display = 'none'; // Hide the cancel button
    }
  }


  function cancelUpload() {
    const image = document.getElementById('profile-image1');
    const fileInput = document.getElementById('profile-image-upload');
    const cancelButton = document.getElementById('cancel-button');

    image.src = '/img/creator_img.png'; // Set the image source back to default
    fileInput.value = ''; // Reset the input value
    cancelButton.style.display = 'none'; // Hide the cancel button
  }

  document.addEventListener('DOMContentLoaded', function () {
    const textareas = document.querySelectorAll('textarea');
    textareas.forEach(function (textarea) {
      textarea.addEventListener('input', function () {
        this.style.height = '49px';
        this.style.height = this.scrollHeight + 'px';

      });
    });
  });

  // Handling category selection
  document.addEventListener('DOMContentLoaded', function () {
    const categoryTextarea = document.querySelector('textarea[name="category"]');
    const selectedCategories = new Set();
    const categoryTextArea = document.getElementById('categoryTextArea');
    const resultContainer = document.getElementById('category_search');

    categoryTextarea.addEventListener('input', function () {
      const query = this.value.trim();

      if (query) {
        fetch('/category/query?data_query=' + query)
          .then(response => response.json())
          .then(data => {
            if (data.length > 0) {
              resultContainer.style.display = 'block';
              resultContainer.innerHTML = '';

              const list = document.createElement('ul');

              data.forEach(item => {
                const listItem = document.createElement('li');
                listItem.textContent = item.category_name;

                listItem.addEventListener('click', function () {
                  const categoryId = item.id;
                  if (!Array.from(selectedCategories).some(category => category.id === categoryId)) {
                    selectedCategories.add({
                      id: item.id,
                      name: item.category_name
                    });
                    updateCategoryTextarea();
                  }
                  categoryTextarea.value = '';
                  resultContainer.style.display = 'none';
                });

                list.appendChild(listItem);
              });

              resultContainer.appendChild(list);
            } else {
              resultContainer.style.display = 'none';
            }
          })
          .catch(error => console.error('Error:', error));
      } else {
        resultContainer.style.display = 'none';
      }
    });

    function removeCategory(category) {
      selectedCategories.delete(category);
      updateCategoryTextarea();
      renderSelectedCategories();
    }

    function updateCategoryTextarea() {
      categoryTextarea.value = '';
      renderSelectedCategories();
      resultContainer.style.display = 'none';
    }

    function renderSelectedCategories() {
      const selectedContainer = document.getElementById('selectedCategories');
      selectedContainer.innerHTML = '';

      selectedCategories.forEach(category => {
        const categoryItem = document.createElement('div');
        categoryItem.classList.add('selectedCategory');

        const categoryName = document.createElement('span');
        categoryName.textContent = category.name;

        const removeButton = document.createElement('span');
        removeButton.classList.add('category_remove_button');
        removeButton.textContent = 'x';
        removeButton.addEventListener('click', () => removeCategory(category));

        categoryItem.appendChild(categoryName);
        categoryItem.appendChild(removeButton);
        selectedContainer.appendChild(categoryItem);

        const hiddenInput = document.createElement('input');
        hiddenInput.type = 'hidden';
        hiddenInput.name = 'id_category';
        hiddenInput.value = category.id;
        selectedContainer.appendChild(hiddenInput);
      });

      categoryTextarea.addEventListener('input', function () {
        resultContainer.style.display = 'block';
        const query = this.value.trim();

        if (query) {
          fetch('/category/query?data_query=' + query)
            .then(response => response.json())
            .then(data => {
              if (data.length > 0) {
                resultContainer.innerHTML = '';

                const list = document.createElement('ul');

                data.forEach(item => {
                  const listItem = document.createElement('li');
                  listItem.textContent = item.category_name;

                  listItem.addEventListener('click', function () {
                    const categoryId = item.id;
                    if (!Array.from(selectedCategories).some(category => category.id === categoryId)) {
                      selectedCategories.add({
                        id: item.id,
                        name: item.category_name
                      });
                      updateCategoryTextarea();
                    }
                    categoryTextarea.value = '';
                    resultContainer.style.display = 'none';
                  });

                  list.appendChild(listItem);
                });

                resultContainer.appendChild(list);
              } else {
                resultContainer.style.display = 'none';
              }
            })
            .catch(error => console.error('Error:', error));
        } else {
          resultContainer.style.display = 'none';
        }
      });
    }

  });
</script>